#!/bin/zsh -f

# My ZSH configuration which I try to keep as minimal and
# fast as possible.

# Use Emacs key bindings, ZSH will default this to
# Vim if the default editor is Vim.
bindkey -e

# Extend the path
typeset -U PATH path

# Environment
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
export XDG_DATA_HOME=$HOME/.local/share
export EDITOR="nvim"

# Mac-specific stuff
if [[ "$(uname)" == "Darwin" ]]; then
  source ~/.zshrc.mac
fi

# Local path
path+=("$HOME/.local/bin")

# Neovim
path+=("/opt/nvim/bin")

# Erlang
export KERL_CONFIGURE_OPTIONS="--disable-debug --without-javac"

# Rust
path+=("$HOME/.cargo/bin")

# Zig
path+=("$HOME/.zvm/self")
path+=("$HOME/.zvm/bin")

export PATH

# Shortcuts
alias tt='tmux new-session -A -s main'

if (( $+commands[bat] ))
then
  alias cat='bat'
fi

# Magit on the commandline
if (( $+commands[gitu] ))
then
  alias gu='gitu'
fi

# Replace `ls` with `eza`, if installed
if (( $+commands[eza] ))
then
  alias ls='eza'                              # ls
  alias l='eza -lbF --git'                    # list, size, type, git
  alias ll='eza -lbGF --git'                  # long list
  alias llm='eza -lbGd --git --sort=modified' # long list, modified date sort
fi

# Some useful Git shortcuts
alias gc='git commit'
alias gs='git status --ignore-submodules=dirty'
alias gp='git push origin HEAD'
alias gf='git pull origin HEAD'

# Mise version manager
if (( $+commands[mise] ))
then
  eval "$(~/.local/bin/mise activate zsh)"
fi

# Setup environment variables per directory.
if (( $+commands[direnv] ))
then
  eval "$(direnv hook zsh)"
fi

# Quickly jump to directories with the help of Z
if [ -d "$HOME/.zsh/zsh-z" ]
then
  source $HOME/.zsh/zsh-z/zsh-z.plugin.zsh
fi

# Fish like auto-suggestions
if [ -d "$HOME/.zsh/zsh-autosuggestions" ]
then
  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# Fish like highlighting
if [ -d "$HOME/.zsh/zsh-syntax-highlighting" ]
then
  source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Automatically close, delete and skip matching delimiting pairs.
if [ -d "$HOME/.zsh/zsh-autopair" ]
then
  source ~/.zsh/zsh-autopair/autopair.zsh
  autopair-init
fi

# Nice menu for auto-complete, must be loaded after
# the Z plugin.
zstyle ':completion:*' menu select

# Check if EAT_SHELL_INTEGRATION_DIR exists and is a directory before sourcing
if [ -n "$EAT_SHELL_INTEGRATION_DIR" ] && [ -d "$EAT_SHELL_INTEGRATION_DIR" ]
then
  source "$EAT_SHELL_INTEGRATION_DIR/zsh"
fi

# Sync commandline history between sessions.
if (( $+commands[atuin] ))
then
  eval "$(atuin init zsh)"
fi

# Check if we're on bytebottom.com and run ssh-agent setup if true
if [[ "$(hostname)" == *"bytebottom.com"* ]] || [[ "$HOST" == *"bytebottom.com"* ]]; then
    # Start ssh-agent
    if [ -z "$SSH_AUTH_SOCK" ]; then
       # Check for a currently running instance of the agent
       RUNNING_AGENT="`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`"
       if [ "$RUNNING_AGENT" = "0" ]; then
            ssh-agent -s &> $HOME/.ssh/ssh-agent
       fi
       eval `cat $HOME/.ssh/ssh-agent`
    fi

    # Add your SSH key to the agent
    ssh-add ~/.ssh/id_rsa 2>/dev/null

    echo "SSH agent started for bytebottom.com connection."
fi

# Enable autocompletion
autoload -Uz compinit; compinit

# The pure prompt
fpath+=($HOME/.zsh/pure)
autoload -U promptinit; promptinit
prompt pure
